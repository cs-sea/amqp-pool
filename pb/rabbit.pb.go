// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: rabbit.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Exchange_KindGroup int32

const (
	Exchange_direct Exchange_KindGroup = 0
	Exchange_fanout Exchange_KindGroup = 1
)

// Enum value maps for Exchange_KindGroup.
var (
	Exchange_KindGroup_name = map[int32]string{
		0: "direct",
		1: "fanout",
	}
	Exchange_KindGroup_value = map[string]int32{
		"direct": 0,
		"fanout": 1,
	}
)

func (x Exchange_KindGroup) Enum() *Exchange_KindGroup {
	p := new(Exchange_KindGroup)
	*p = x
	return p
}

func (x Exchange_KindGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exchange_KindGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_rabbit_proto_enumTypes[0].Descriptor()
}

func (Exchange_KindGroup) Type() protoreflect.EnumType {
	return &file_rabbit_proto_enumTypes[0]
}

func (x Exchange_KindGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exchange_KindGroup.Descriptor instead.
func (Exchange_KindGroup) EnumDescriptor() ([]byte, []int) {
	return file_rabbit_proto_rawDescGZIP(), []int{1, 0}
}

type PushMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Key      string    `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Message  []byte    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PushMessageRequest) Reset() {
	*x = PushMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rabbit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessageRequest) ProtoMessage() {}

func (x *PushMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rabbit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessageRequest.ProtoReflect.Descriptor instead.
func (*PushMessageRequest) Descriptor() ([]byte, []int) {
	return file_rabbit_proto_rawDescGZIP(), []int{0}
}

func (x *PushMessageRequest) GetExchange() *Exchange {
	if x != nil {
		return x.Exchange
	}
	return nil
}

func (x *PushMessageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PushMessageRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type Exchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind Exchange_KindGroup `protobuf:"varint,2,opt,name=kind,proto3,enum=rabbit.Exchange_KindGroup" json:"kind,omitempty"` // 类型
}

func (x *Exchange) Reset() {
	*x = Exchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rabbit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exchange) ProtoMessage() {}

func (x *Exchange) ProtoReflect() protoreflect.Message {
	mi := &file_rabbit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exchange.ProtoReflect.Descriptor instead.
func (*Exchange) Descriptor() ([]byte, []int) {
	return file_rabbit_proto_rawDescGZIP(), []int{1}
}

func (x *Exchange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exchange) GetKind() Exchange_KindGroup {
	if x != nil {
		return x.Kind
	}
	return Exchange_direct
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rabbit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rabbit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_rabbit_proto_rawDescGZIP(), []int{2}
}

var File_rabbit_proto protoreflect.FileDescriptor

var file_rabbit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x22, 0x6e, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x73, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x4b, 0x69, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x66, 0x61, 0x6e, 0x6f, 0x75, 0x74, 0x10, 0x01, 0x22, 0x0f, 0x0a, 0x0d, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x4a, 0x0a, 0x0d,
	0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a,
	0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1a, 0x2e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rabbit_proto_rawDescOnce sync.Once
	file_rabbit_proto_rawDescData = file_rabbit_proto_rawDesc
)

func file_rabbit_proto_rawDescGZIP() []byte {
	file_rabbit_proto_rawDescOnce.Do(func() {
		file_rabbit_proto_rawDescData = protoimpl.X.CompressGZIP(file_rabbit_proto_rawDescData)
	})
	return file_rabbit_proto_rawDescData
}

var file_rabbit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rabbit_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rabbit_proto_goTypes = []interface{}{
	(Exchange_KindGroup)(0),    // 0: rabbit.Exchange.KindGroup
	(*PushMessageRequest)(nil), // 1: rabbit.PushMessageRequest
	(*Exchange)(nil),           // 2: rabbit.Exchange
	(*EmptyResponse)(nil),      // 3: rabbit.EmptyResponse
}
var file_rabbit_proto_depIdxs = []int32{
	2, // 0: rabbit.PushMessageRequest.exchange:type_name -> rabbit.Exchange
	0, // 1: rabbit.Exchange.kind:type_name -> rabbit.Exchange.KindGroup
	1, // 2: rabbit.RabbitService.Push:input_type -> rabbit.PushMessageRequest
	3, // 3: rabbit.RabbitService.Push:output_type -> rabbit.EmptyResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rabbit_proto_init() }
func file_rabbit_proto_init() {
	if File_rabbit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rabbit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rabbit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rabbit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rabbit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rabbit_proto_goTypes,
		DependencyIndexes: file_rabbit_proto_depIdxs,
		EnumInfos:         file_rabbit_proto_enumTypes,
		MessageInfos:      file_rabbit_proto_msgTypes,
	}.Build()
	File_rabbit_proto = out.File
	file_rabbit_proto_rawDesc = nil
	file_rabbit_proto_goTypes = nil
	file_rabbit_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RabbitServiceClient is the client API for RabbitService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RabbitServiceClient interface {
	Push(ctx context.Context, in *PushMessageRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type rabbitServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRabbitServiceClient(cc grpc.ClientConnInterface) RabbitServiceClient {
	return &rabbitServiceClient{cc}
}

func (c *rabbitServiceClient) Push(ctx context.Context, in *PushMessageRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/rabbit.RabbitService/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RabbitServiceServer is the server API for RabbitService service.
type RabbitServiceServer interface {
	Push(context.Context, *PushMessageRequest) (*EmptyResponse, error)
}

// UnimplementedRabbitServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRabbitServiceServer struct {
}

func (*UnimplementedRabbitServiceServer) Push(context.Context, *PushMessageRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}

func RegisterRabbitServiceServer(s *grpc.Server, srv RabbitServiceServer) {
	s.RegisterService(&_RabbitService_serviceDesc, srv)
}

func _RabbitService_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RabbitServiceServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rabbit.RabbitService/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RabbitServiceServer).Push(ctx, req.(*PushMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RabbitService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rabbit.RabbitService",
	HandlerType: (*RabbitServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _RabbitService_Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rabbit.proto",
}
